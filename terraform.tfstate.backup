{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 120,
  "lineage": "bfa78857-a93b-741a-1871-9b552ba50329",
  "outputs": {
    "lb_ip": {
      "value": "35.196.0.9",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "google_client_config",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token": "ya29.c.c0AY_VpZjBIRpoPoxfEUqKPupm2maxJTA5KImCPMJWWRmODPWa2wE6Ir4KrHS5jFpTCTwJa-PiUkgI-TOH03NAVC3ntVvx0muN3bV5gRgh-8zTuYp-VvD_u06eO4Nz_ZK0938UXbBDnnvuagQJPFdBdb6ai29eQuGWgD1CJyn1PSjm_FLZcw9CVML9WFPF6ZPJHpAQ1QCLcQ452ZllsYXnhKtem8kIZRE6uyqwPINodvx113iVhZTmTIbIgQ62CYbe5eIZud6wF54S42nzYY6YQKMpK0D78PrkkvzrH-eG9cmET444s5ifXD-diIUYgMQQxZJe-03KneylxcSKouZLWUbcJJ1MWODzrBvBv2CRp28zQBxd4cuy1w5mJwN387CMZzhd8RqqqqSU5b5xS_6w1IZZ_aQWmmw84ie4gXyfWxYtFSBbswJ_QuzaifFaOl1rzpuoUi-OaJ6fw5u4JYvd9fgqJBzw6h_Qoboe49iRoI08zb5aOYBhwbaod70_sasd9FsS25MWVVivF-rchVMJ6UOx51-8-UjxXax21wIjdexueRw4XWh73FnWSj6BUx5nOsu2UiOQonFfjU3M07_YBpIJOnmtu64I0Obq0bBb4W0Bl3p5ye4VXk32ta5uv3msWZBOf7fZazobnJagc7o9FgO5JfXyJ3ppVmltpkpVjb9gXgaOa9BQlhq5fpwun1uqYdl0WhtSl0yd7rpiu9-fwZJqyrFzBM5_puf0F1Je670QS2IF2FII3y21Op6VnU2Ft0s5MpcFhQQgISzZQYvSQwM4Bv7fXo7Xz6n5Jmo9XatbQIsM4nUbF61UYFII9JjhO293rV_YkRdlpUdBYWu8bf8tQk23_9195diR6rQ7dORdf0dUdtVZU9dZJOzSbJ6mI0Z0VBez5aaFlIOdBUOQulkb-FpraIeVsZXxX__3fwYs3_fdukav4UXqIbOQ7dh-mUknw91zlrbua2s4sIhteMWy0l1Zd2RytyU7BQp7b0BB5R0WiM9rm5-",
            "id": "projects/\"hashicorp-393022\"/regions/\"us-east1\"/zones/\"us-east1-b\"",
            "project": "hashicorp-393022",
            "region": "us-east1",
            "zone": "us-east1-b"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "istio-ingress",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "istio-ingress",
                "resource_version": "5272",
                "uid": "77f96428-d231-42b7-a487-495b4ccf0986"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.google_client_config.current",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "istiosystem",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "istio-system",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "istio-system",
                "resource_version": "5274",
                "uid": "c0e6e083-e6d6-4e51-8df3-da5a152e5579"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.google_client_config.current",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "k8s-microservices",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "istio-injection": "enabled"
                },
                "name": "k8s-microservices",
                "resource_version": "5273",
                "uid": "76b2e832-9275-45fe-9f4f-975063058213"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.google_client_config.current",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.api",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "api-gateway-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/grpc-api-gateway",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "api-gateway"
                },
                "name": "grpc-api-gateway",
                "namespace": "k8s-microservices",
                "resource_version": "111913",
                "uid": "bb06ad20-563a-4195-b70d-3e28d8403e24"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "api-gateway"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "api-gateway"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "PORT",
                                "value": ":3000",
                                "value_from": []
                              },
                              {
                                "name": "AUTH_SVC_URL",
                                "value": "auth-service.k8s-microservices:83",
                                "value_from": []
                              },
                              {
                                "name": "PRODUCT_SVC_URL",
                                "value": "product-service.k8s-microservices:82",
                                "value_from": []
                              },
                              {
                                "name": "ORDER_SVC_URL",
                                "value": "order-service.k8s-microservices:81",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "erwinsalas42/go-grpc-api-gateway:v1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "go-grpc-api-gateway",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "250m",
                                  "memory": "50Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.istiosystem",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.api",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "api_gateway_virtual_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "VirtualService",
                "metadata": {
                  "name": "api-gateway-vs",
                  "namespace": "k8s-microservices"
                },
                "spec": {
                  "gateways": [
                    "api-ingressgateway"
                  ],
                  "hosts": [
                    "*"
                  ],
                  "http": [
                    {
                      "match": [
                        {
                          "uri": {
                            "prefix": "/"
                          }
                        }
                      ],
                      "route": [
                        {
                          "destination": {
                            "host": "api-gateway-service.k8s-microservices.svc.cluster.local",
                            "port": {
                              "number": 8580
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "gateways": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "hosts": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "http": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "uri": [
                                        "object",
                                        {
                                          "prefix": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ],
                              "route": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "destination": [
                                        "object",
                                        {
                                          "host": "string",
                                          "port": [
                                            "object",
                                            {
                                              "number": "number"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "VirtualService",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "api-gateway-vs",
                  "namespace": "k8s-microservices",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "exportTo": null,
                  "gateways": [
                    "api-ingressgateway"
                  ],
                  "hosts": [
                    "*"
                  ],
                  "http": [
                    {
                      "corsPolicy": {
                        "allowCredentials": null,
                        "allowHeaders": null,
                        "allowMethods": null,
                        "allowOrigin": null,
                        "allowOrigins": null,
                        "exposeHeaders": null,
                        "maxAge": null
                      },
                      "delegate": {
                        "name": null,
                        "namespace": null
                      },
                      "directResponse": {
                        "body": {
                          "bytes": null,
                          "string": null
                        },
                        "status": null
                      },
                      "fault": {
                        "abort": {
                          "grpcStatus": null,
                          "http2Error": null,
                          "httpStatus": null,
                          "percentage": {
                            "value": null
                          }
                        },
                        "delay": {
                          "exponentialDelay": null,
                          "fixedDelay": null,
                          "percent": null,
                          "percentage": {
                            "value": null
                          }
                        }
                      },
                      "headers": {
                        "request": {
                          "add": null,
                          "remove": null,
                          "set": null
                        },
                        "response": {
                          "add": null,
                          "remove": null,
                          "set": null
                        }
                      },
                      "match": [
                        {
                          "authority": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "gateways": null,
                          "headers": null,
                          "ignoreUriCase": null,
                          "method": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "name": null,
                          "port": null,
                          "queryParams": null,
                          "scheme": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "sourceLabels": null,
                          "sourceNamespace": null,
                          "statPrefix": null,
                          "uri": {
                            "exact": null,
                            "prefix": "/",
                            "regex": null
                          },
                          "withoutHeaders": null
                        }
                      ],
                      "mirror": {
                        "host": null,
                        "port": {
                          "number": null
                        },
                        "subset": null
                      },
                      "mirrorPercent": null,
                      "mirrorPercentage": {
                        "value": null
                      },
                      "mirror_percent": null,
                      "mirrors": null,
                      "name": null,
                      "redirect": {
                        "authority": null,
                        "derivePort": null,
                        "port": null,
                        "redirectCode": null,
                        "scheme": null,
                        "uri": null
                      },
                      "retries": {
                        "attempts": null,
                        "perTryTimeout": null,
                        "retryOn": null,
                        "retryRemoteLocalities": null
                      },
                      "rewrite": {
                        "authority": null,
                        "uri": null,
                        "uriRegexRewrite": {
                          "match": null,
                          "rewrite": null
                        }
                      },
                      "route": [
                        {
                          "destination": {
                            "host": "api-gateway-service.k8s-microservices.svc.cluster.local",
                            "port": {
                              "number": 8580
                            },
                            "subset": null
                          },
                          "headers": {
                            "request": {
                              "add": null,
                              "remove": null,
                              "set": null
                            },
                            "response": {
                              "add": null,
                              "remove": null,
                              "set": null
                            }
                          },
                          "weight": null
                        }
                      ],
                      "timeout": null
                    }
                  ],
                  "tcp": null,
                  "tls": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "exportTo": [
                        "list",
                        "string"
                      ],
                      "gateways": [
                        "list",
                        "string"
                      ],
                      "hosts": [
                        "list",
                        "string"
                      ],
                      "http": [
                        "list",
                        [
                          "object",
                          {
                            "corsPolicy": [
                              "object",
                              {
                                "allowCredentials": "bool",
                                "allowHeaders": [
                                  "list",
                                  "string"
                                ],
                                "allowMethods": [
                                  "list",
                                  "string"
                                ],
                                "allowOrigin": [
                                  "list",
                                  "string"
                                ],
                                "allowOrigins": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ]
                                ],
                                "exposeHeaders": [
                                  "list",
                                  "string"
                                ],
                                "maxAge": "string"
                              }
                            ],
                            "delegate": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ],
                            "directResponse": [
                              "object",
                              {
                                "body": [
                                  "object",
                                  {
                                    "bytes": "string",
                                    "string": "string"
                                  }
                                ],
                                "status": "number"
                              }
                            ],
                            "fault": [
                              "object",
                              {
                                "abort": [
                                  "object",
                                  {
                                    "grpcStatus": "string",
                                    "http2Error": "string",
                                    "httpStatus": "number",
                                    "percentage": [
                                      "object",
                                      {
                                        "value": "number"
                                      }
                                    ]
                                  }
                                ],
                                "delay": [
                                  "object",
                                  {
                                    "exponentialDelay": "string",
                                    "fixedDelay": "string",
                                    "percent": "number",
                                    "percentage": [
                                      "object",
                                      {
                                        "value": "number"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "headers": [
                              "object",
                              {
                                "request": [
                                  "object",
                                  {
                                    "add": [
                                      "map",
                                      "string"
                                    ],
                                    "remove": [
                                      "list",
                                      "string"
                                    ],
                                    "set": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "response": [
                                  "object",
                                  {
                                    "add": [
                                      "map",
                                      "string"
                                    ],
                                    "remove": [
                                      "list",
                                      "string"
                                    ],
                                    "set": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "authority": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "headers": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ],
                                  "ignoreUriCase": "bool",
                                  "method": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "name": "string",
                                  "port": "number",
                                  "queryParams": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ],
                                  "scheme": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string",
                                  "statPrefix": "string",
                                  "uri": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "withoutHeaders": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ],
                            "mirror": [
                              "object",
                              {
                                "host": "string",
                                "port": [
                                  "object",
                                  {
                                    "number": "number"
                                  }
                                ],
                                "subset": "string"
                              }
                            ],
                            "mirrorPercent": "number",
                            "mirrorPercentage": [
                              "object",
                              {
                                "value": "number"
                              }
                            ],
                            "mirror_percent": "number",
                            "mirrors": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "percentage": [
                                    "object",
                                    {
                                      "value": "number"
                                    }
                                  ]
                                }
                              ]
                            ],
                            "name": "string",
                            "redirect": [
                              "object",
                              {
                                "authority": "string",
                                "derivePort": "string",
                                "port": "number",
                                "redirectCode": "number",
                                "scheme": "string",
                                "uri": "string"
                              }
                            ],
                            "retries": [
                              "object",
                              {
                                "attempts": "number",
                                "perTryTimeout": "string",
                                "retryOn": "string",
                                "retryRemoteLocalities": "bool"
                              }
                            ],
                            "rewrite": [
                              "object",
                              {
                                "authority": "string",
                                "uri": "string",
                                "uriRegexRewrite": [
                                  "object",
                                  {
                                    "match": "string",
                                    "rewrite": "string"
                                  }
                                ]
                              }
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "headers": [
                                    "object",
                                    {
                                      "request": [
                                        "object",
                                        {
                                          "add": [
                                            "map",
                                            "string"
                                          ],
                                          "remove": [
                                            "list",
                                            "string"
                                          ],
                                          "set": [
                                            "map",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "response": [
                                        "object",
                                        {
                                          "add": [
                                            "map",
                                            "string"
                                          ],
                                          "remove": [
                                            "list",
                                            "string"
                                          ],
                                          "set": [
                                            "map",
                                            "string"
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ],
                            "timeout": "string"
                          }
                        ]
                      ],
                      "tcp": [
                        "list",
                        [
                          "object",
                          {
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "destinationSubnets": [
                                    "list",
                                    "string"
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "port": "number",
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string",
                                  "sourceSubnet": "string"
                                }
                              ]
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "destinationSubnets": [
                                    "list",
                                    "string"
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "port": "number",
                                  "sniHosts": [
                                    "list",
                                    "string"
                                  ],
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string"
                                }
                              ]
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio-ingressgateway.helm_release.istio-ingress",
            "module.istio-ingressgateway.kubernetes_manifest.api_ingressgateway",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.api",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "api-gateway-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/api-gateway-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "api-gateway-service",
                "namespace": "k8s-microservices",
                "resource_version": "26899",
                "uid": "a1de7c3e-d14c-4835-88b8-7e6466785943"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.124.194",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 31651,
                    "port": 8580,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "api-gateway"
                },
                "session_affinity": "None",
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.istiosystem",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.auth",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "auth-srv-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/auth-srv-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 2,
                "labels": {
                  "app": "auth-service"
                },
                "name": "auth-srv-deployment",
                "namespace": "k8s-microservices",
                "resource_version": "191018",
                "uid": "350aefbe-daf2-491c-9136-6c7e52cc2d85"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "auth-service"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "auth-service"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "PORT",
                                "value": ":50051",
                                "value_from": []
                              },
                              {
                                "name": "DB_URL",
                                "value": "postgres://erwin:password@auth-database.k8s-microservices:5235/auth",
                                "value_from": []
                              },
                              {
                                "name": "JWT_SECRET_KEY",
                                "value": "r43t18sc",
                                "value_from": []
                              },
                              {
                                "name": "API_SECRET",
                                "value": "98hbun98h",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "erwinsalas42/go-grpc-auth-svc:v1.1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "go-grpc-auth-svc",
                            "port": [
                              {
                                "container_port": 50051,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.auth.kubernetes_service.auth-db-service",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.auth",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "auth-db-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/auth-database",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "auth-database"
                },
                "name": "auth-database",
                "namespace": "k8s-microservices",
                "resource_version": "26895",
                "uid": "5564e957-fcca-46c9-8295-20297cdc7524"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.116.28",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 0,
                    "port": 5235,
                    "protocol": "TCP",
                    "target_port": "5235"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "auth-database"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.auth.kubernetes_stateful_set_v1.auth-db-statefulset",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.auth",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "auth-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/auth-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "auth-service",
                "namespace": "k8s-microservices",
                "resource_version": "26896",
                "uid": "2e360f5d-fd98-4fab-9f47-d62aebce4008"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.123.210",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "grpc",
                    "node_port": 0,
                    "port": 83,
                    "protocol": "TCP",
                    "target_port": "50051"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "auth-service"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.auth.kubernetes_deployment.auth-srv-deployment",
            "module.auth.kubernetes_service.auth-db-service",
            "module.auth.kubernetes_stateful_set_v1.auth-db-statefulset",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.auth",
      "mode": "managed",
      "type": "kubernetes_stateful_set_v1",
      "name": "auth-db-statefulset",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/auth-db-statefulset",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "auth-database"
                },
                "name": "auth-db-statefulset",
                "namespace": "k8s-microservices",
                "resource_version": "111995",
                "uid": "2f2212d0-a9c4-44df-b458-6aad9f4c131e"
              }
            ],
            "spec": [
              {
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "auth-database"
                    }
                  }
                ],
                "service_name": "auth-db-statefulset",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "auth-database"
                        },
                        "name": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "-p",
                              "5235"
                            ],
                            "command": [],
                            "env": [
                              {
                                "name": "POSTGRES_USER",
                                "value": "erwin",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_PASSWORD",
                                "value": "password",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_DB",
                                "value": "auth",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "postgres:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "auth-database",
                            "port": [
                              {
                                "container_port": 5235,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": []
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.gcp_gke",
      "mode": "data",
      "type": "google_container_engine_versions",
      "name": "gke_version",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "default_cluster_version": "1.27.8-gke.1067004",
            "id": "2024-03-19 09:12:09.437872 +0000 UTC",
            "latest_master_version": "1.27.11-gke.1118000",
            "latest_node_version": "1.27.11-gke.1118000",
            "location": "us-east1",
            "project": null,
            "release_channel_default_version": {
              "RAPID": "1.29.1-gke.1589017",
              "REGULAR": "1.27.8-gke.1067004",
              "STABLE": "1.27.8-gke.1067004"
            },
            "release_channel_latest_version": {
              "RAPID": "1.27.11-gke.1118000",
              "REGULAR": "1.27.10-gke.1055000",
              "STABLE": "1.27.8-gke.1067004"
            },
            "valid_master_versions": [
              "1.27.11-gke.1118000",
              "1.27.11-gke.1062000",
              "1.27.10-gke.1055000",
              "1.27.9-gke.1092000",
              "1.27.8-gke.1067004",
              "1.27.7-gke.1121002",
              "1.27.3-gke.100"
            ],
            "valid_node_versions": [
              "1.27.11-gke.1118000",
              "1.27.11-gke.1062000",
              "1.27.11-gke.1018000",
              "1.27.10-gke.1207000",
              "1.27.10-gke.1152000",
              "1.27.10-gke.1055000",
              "1.27.9-gke.1092000",
              "1.27.8-gke.1067004",
              "1.27.8-gke.1067000",
              "1.27.7-gke.1293000",
              "1.27.7-gke.1121002",
              "1.27.7-gke.1121000",
              "1.27.7-gke.1088000",
              "1.27.7-gke.1056000",
              "1.27.7-gke.1038000",
              "1.27.6-gke.1506000",
              "1.27.6-gke.1445000",
              "1.27.6-gke.1248000",
              "1.27.5-gke.200",
              "1.27.4-gke.900",
              "1.27.3-gke.1700",
              "1.27.3-gke.100",
              "1.27.2-gke.2100",
              "1.27.2-gke.1200"
            ],
            "version_prefix": "1.27."
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.gcp_gke",
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "primary",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "config_connector_config": [],
                "dns_cache_config": [],
                "gce_persistent_disk_csi_driver_config": [
                  {
                    "enabled": true
                  }
                ],
                "gcp_filestore_csi_driver_config": [],
                "gcs_fuse_csi_driver_config": [],
                "gke_backup_agent_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ]
              }
            ],
            "allow_net_admin": null,
            "authenticator_groups_config": [],
            "binary_authorization": [
              {
                "enabled": false,
                "evaluation_mode": ""
              }
            ],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [],
                "autoscaling_profile": "BALANCED",
                "enabled": false,
                "resource_limits": []
              }
            ],
            "cluster_ipv4_cidr": "10.204.0.0/14",
            "confidential_nodes": [],
            "cost_management_config": [],
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "datapath_provider": "",
            "default_max_pods_per_node": 110,
            "default_snat_status": [
              {
                "disabled": false
              }
            ],
            "deletion_protection": false,
            "description": "",
            "dns_config": [],
            "enable_autopilot": false,
            "enable_intranode_visibility": false,
            "enable_k8s_beta_apis": [],
            "enable_kubernetes_alpha": false,
            "enable_l4_ilb_subsetting": false,
            "enable_legacy_abac": false,
            "enable_shielded_nodes": true,
            "enable_tpu": false,
            "endpoint": "34.75.129.161",
            "fleet": [],
            "gateway_api_config": [],
            "id": "projects/hashicorp-393022/locations/us-east1/clusters/hashicorp-393022-gke",
            "identity_service_config": [],
            "initial_node_count": 1,
            "ip_allocation_policy": [
              {
                "additional_pod_ranges_config": [],
                "cluster_ipv4_cidr_block": "10.204.0.0/14",
                "cluster_secondary_range_name": "gke-hashicorp-393022-gke-pods-b13e6b37",
                "pod_cidr_overprovision_config": [
                  {
                    "disabled": false
                  }
                ],
                "services_ipv4_cidr_block": "10.68.112.0/20",
                "services_secondary_range_name": "gke-hashicorp-393022-gke-services-b13e6b37",
                "stack_type": "IPV4"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "us-east1",
            "logging_config": [
              {
                "enable_components": [
                  "SYSTEM_COMPONENTS",
                  "WORKLOADS"
                ]
              }
            ],
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRTUJLWUJtUUx0QUVPVXY4LzlaUjJoakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRd05HTmhZVGM0WlMxaE5EUmpMVFEwTW1FdFltTmpaaTAwTW1Oa1kyWXpZVE5qTlRndwpJQmNOTWpRd016RTVNREl6TnpNMFdoZ1BNakExTkRBek1USXdNek0zTXpSYU1DOHhMVEFyQmdOVkJBTVRKREEwClkyRmhOemhsTFdFME5HTXRORFF5WVMxaVkyTm1MVFF5WTJSalpqTmhNMk0xT0RDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQU1rc05BNUNyMit5VmFIaUV2bDU5MHlqZUpSRmxRV3dPZmRiM1hnWApVcHlQd1p6MWhVNzJMeERNaHJjYUEwTzZEZ01jZEFOSFJCOXVEVHJsaWg1dDBjdmFuY2UwY2NNdTRvc1p4ajFHCndQWml0Wkd2Y3UwR2wwaFAwR3RpVkE2MVpZQ2MvNElOMzhYbXNPWDVZVGl5ZU56QWk1MHpNdk5aUTRKSURyeVYKTU03QzR6ZGNBZEpBSnlaRGNielhvRUdUVW9qamV4MHlUZGZuZTN2QVhVcVBWbDRDakVaTzA2Ri9NQlRCRCtzWAplaUI0ajFHbklodmt4bFVCNXNwRGVnZXhvaGFVNzJBTnpRL2Fna1FFM21OcjRLYUNXRWxtejdJY2ZuOTIraXlBCjF6RGpqR2FRSFkrNmF4cWsxY29kUlBCTmtsNUJLNVFaS3BQK2k3WTNuaDZhQXBxZC9RWk5ZMlhnS1AxRDVKdVAKaGFxUkErUjNKRWNIV3h0b3luVVhuZG9hU2c5UWxVQXVLUUs5MWJvclV4RE1QUStKYnNFZGpjU0NKaHU0VDJSbQowT0JVazNzaUFnVzZEc3gzNmJwVFNPdVY2MXBKV2dEVkNDM3F3ZWxvRytudGFsc05qM3ljSG1JNS9KNlRpa1U5Clh5b1hnVHBpRmxnanA2T2dxZW9LdjhhTFlRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVjaDFNOXd3R3dEbW04ejFod01WeDNqQ3BDR0F3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFJZi9iekUvTjdPcEpPU3J6eVlsNVVPK0JoMTlxRE9FZUo1cEQ0djJqYTlBClBmQkd1Nkc2UW1PWmRvNmlHV0pTR1JTRGlmeHVmZ1NmMkY0QlNCc2RpNjhjRnJJSG8zY054OG1yaFVmckdyNHYKZU4xN3JGRFNPemZGVnY4MDFSMEIrVkw4T2xoZ3FzYW1RWmtqai9tcVErY1JwWStQTTErY2R5Y24rb1ZkVU9XRwpnUU5LRXB0RkNsUi80bFUxRGJuRXdvZ0NtZHVkVmtia2NjVTR5N2pLUU9IaGFTYmIzTEJISlZiSHVBakNxTEZNCjR2T09sV0pHUE1PODZodnZGNGE2eVhjRVJxN21IRXMwRzllRWp2Y2JTbXk4STdwTXJUZ1llOGVqVSsxaWdBM1UKRkE0Z2ZPVldtNnJKenNsbEpMQXNmQUhZU1JTbER0d1BnRWJteG1BOTI3UzRtWFBhWVE2TnBYT3hMS2N1c0FncwpBeUY0Z2lSSGUycXBSQmxiWU5IVUdCOVJsZkNPbmRadU8xQkhuTmpFRVZFYi9QRElybk1Ib3NaS3oyTWcwSStQCmN4T1dhSXZCL28rTnBGN2hCdGdkYVg1S3FyOUsxbnBxSndxeW9OYzh4N1g0TDNJTWV5TGU0TlRQMDd1VlFXSVMKN2svRlJzZUdYcTcxWVZXNmxTc2Zldz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "master_authorized_networks_config": [],
            "master_version": "1.27.8-gke.1067004",
            "mesh_certificates": [],
            "min_master_version": null,
            "monitoring_config": [
              {
                "advanced_datapath_observability_config": [
                  {
                    "enable_metrics": false,
                    "enable_relay": false,
                    "relay_mode": "DISABLED"
                  }
                ],
                "enable_components": [
                  "SYSTEM_COMPONENTS"
                ],
                "managed_prometheus": [
                  {
                    "enabled": true
                  }
                ]
              }
            ],
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "hashicorp-393022-gke",
            "network": "projects/hashicorp-393022/global/networks/hashicorp-393022-vpc",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "networking_mode": "VPC_NATIVE",
            "node_config": [
              {
                "advanced_machine_features": [],
                "boot_disk_kms_key": "",
                "confidential_nodes": [],
                "disk_size_gb": 10,
                "disk_type": "pd-balanced",
                "effective_taints": [],
                "enable_confidential_storage": false,
                "ephemeral_storage_local_ssd_config": [],
                "fast_socket": [],
                "gcfs_config": [],
                "guest_accelerator": [],
                "gvnic": [],
                "host_maintenance_policy": [],
                "image_type": "COS_CONTAINERD",
                "kubelet_config": [],
                "labels": {
                  "env": "hashicorp-393022"
                },
                "linux_node_config": [],
                "local_nvme_ssd_block_config": [],
                "local_ssd_count": 0,
                "logging_variant": "DEFAULT",
                "machine_type": "n1-standard-2",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "node_group": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring"
                ],
                "preemptible": true,
                "reservation_affinity": [],
                "resource_labels": {},
                "resource_manager_tags": {},
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": false
                  }
                ],
                "sole_tenant_config": [],
                "spot": false,
                "tags": [
                  "gke-node",
                  "hashicorp-393022-gke"
                ],
                "taint": [],
                "workload_metadata_config": []
              }
            ],
            "node_locations": [
              "us-east1-b",
              "us-east1-c",
              "us-east1-d"
            ],
            "node_pool": [
              {
                "autoscaling": [],
                "initial_node_count": 2,
                "instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/zones/us-east1-b/instanceGroupManagers/gke-hashicorp-393022-hashicorp-393022-ed8db3f2-grp"
                ],
                "managed_instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/zones/us-east1-b/instanceGroups/gke-hashicorp-393022-hashicorp-393022-ed8db3f2-grp"
                ],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 110,
                "name": "hashicorp-393022-gke",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "network_performance_config": [],
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.204.0.0/14",
                    "pod_range": "gke-hashicorp-393022-gke-pods-b13e6b37"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 10,
                    "disk_type": "pd-balanced",
                    "effective_taints": [],
                    "enable_confidential_storage": false,
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {
                      "env": "hashicorp-393022"
                    },
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "n1-standard-2",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring"
                    ],
                    "preemptible": true,
                    "reservation_affinity": [],
                    "resource_labels": {},
                    "resource_manager_tags": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": false
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [
                      "gke-node",
                      "hashicorp-393022-gke"
                    ],
                    "taint": [],
                    "workload_metadata_config": []
                  }
                ],
                "node_count": 2,
                "node_locations": [
                  "us-east1-b"
                ],
                "placement_policy": [],
                "queued_provisioning": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.8-gke.1067004"
              }
            ],
            "node_pool_auto_config": [],
            "node_pool_defaults": [
              {
                "node_config_defaults": [
                  {
                    "logging_variant": "DEFAULT"
                  }
                ]
              }
            ],
            "node_version": "1.27.8-gke.1067004",
            "notification_config": [
              {
                "pubsub": [
                  {
                    "enabled": false,
                    "filter": [],
                    "topic": ""
                  }
                ]
              }
            ],
            "operation": null,
            "private_cluster_config": [
              {
                "enable_private_endpoint": false,
                "enable_private_nodes": false,
                "master_global_access_config": [
                  {
                    "enabled": false
                  }
                ],
                "master_ipv4_cidr_block": "",
                "peering_name": "",
                "private_endpoint": "10.10.0.2",
                "private_endpoint_subnetwork": "",
                "public_endpoint": "34.75.129.161"
              }
            ],
            "private_ipv6_google_access": "",
            "project": "hashicorp-393022",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": true,
            "resource_labels": {},
            "resource_usage_export_config": [],
            "security_posture_config": [
              {
                "mode": "BASIC",
                "vulnerability_mode": "VULNERABILITY_MODE_UNSPECIFIED"
              }
            ],
            "self_link": "https://container.googleapis.com/v1/projects/hashicorp-393022/locations/us-east1/clusters/hashicorp-393022-gke",
            "service_external_ips_config": [
              {
                "enabled": false
              }
            ],
            "services_ipv4_cidr": "10.68.112.0/20",
            "subnetwork": "projects/hashicorp-393022/regions/us-east1/subnetworks/hashicorp-393022-subnet",
            "timeouts": null,
            "tpu_ipv4_cidr_block": "",
            "vertical_pod_autoscaling": [],
            "workload_identity_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.gcp_gke",
      "mode": "managed",
      "type": "google_container_node_pool",
      "name": "primary_nodes",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "autoscaling": [],
            "cluster": "hashicorp-393022-gke",
            "id": "projects/hashicorp-393022/locations/us-east1/clusters/hashicorp-393022-gke/nodePools/hashicorp-393022-gke",
            "initial_node_count": 2,
            "instance_group_urls": [
              "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/zones/us-east1-b/instanceGroupManagers/gke-hashicorp-393022-hashicorp-393022-ed8db3f2-grp"
            ],
            "location": "us-east1",
            "managed_instance_group_urls": [
              "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/zones/us-east1-b/instanceGroups/gke-hashicorp-393022-hashicorp-393022-ed8db3f2-grp"
            ],
            "management": [
              {
                "auto_repair": true,
                "auto_upgrade": true
              }
            ],
            "max_pods_per_node": 110,
            "name": "hashicorp-393022-gke",
            "name_prefix": "",
            "network_config": [
              {
                "create_pod_range": false,
                "enable_private_nodes": false,
                "network_performance_config": [],
                "pod_cidr_overprovision_config": [],
                "pod_ipv4_cidr_block": "10.204.0.0/14",
                "pod_range": "gke-hashicorp-393022-gke-pods-b13e6b37"
              }
            ],
            "node_config": [
              {
                "advanced_machine_features": [],
                "boot_disk_kms_key": "",
                "confidential_nodes": [],
                "disk_size_gb": 10,
                "disk_type": "pd-balanced",
                "effective_taints": [],
                "enable_confidential_storage": false,
                "ephemeral_storage_local_ssd_config": [],
                "fast_socket": [],
                "gcfs_config": [],
                "guest_accelerator": [],
                "gvnic": [],
                "host_maintenance_policy": [],
                "image_type": "COS_CONTAINERD",
                "kubelet_config": [],
                "labels": {
                  "env": "hashicorp-393022"
                },
                "linux_node_config": [],
                "local_nvme_ssd_block_config": [],
                "local_ssd_count": 0,
                "logging_variant": "DEFAULT",
                "machine_type": "n1-standard-2",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "node_group": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring"
                ],
                "preemptible": true,
                "reservation_affinity": [],
                "resource_labels": {},
                "resource_manager_tags": {},
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": false
                  }
                ],
                "sole_tenant_config": [],
                "spot": false,
                "tags": [
                  "gke-node",
                  "hashicorp-393022-gke"
                ],
                "taint": [],
                "workload_metadata_config": []
              }
            ],
            "node_count": 2,
            "node_locations": [
              "us-east1-b"
            ],
            "operation": null,
            "placement_policy": [],
            "project": "hashicorp-393022",
            "queued_provisioning": [],
            "timeouts": null,
            "upgrade_settings": [
              {
                "blue_green_settings": [],
                "max_surge": 1,
                "max_unavailable": 0,
                "strategy": "SURGE"
              }
            ],
            "version": "1.27.8-gke.1067004"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.gcp_vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "80",
                  "20001",
                  "20002"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2024-03-18T20:37:21.984-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/hashicorp-393022/global/firewalls/allow-http",
            "log_config": [],
            "name": "allow-http",
            "network": "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/global/networks/hashicorp-393022-vpc",
            "priority": 998,
            "project": "hashicorp-393022",
            "self_link": "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/global/firewalls/allow-http",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.gcp_vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.gcp_vpc",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "enable_ula_internal_ipv6": false,
            "gateway_ipv4": "",
            "id": "projects/hashicorp-393022/global/networks/hashicorp-393022-vpc",
            "internal_ipv6_range": "",
            "mtu": 0,
            "name": "hashicorp-393022-vpc",
            "network_firewall_policy_enforcement_order": "AFTER_CLASSIC_FIREWALL",
            "numeric_id": "8541851542910974717",
            "project": "hashicorp-393022",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/global/networks/hashicorp-393022-vpc",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.gcp_vpc",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2024-03-18T20:19:05.032-07:00",
            "description": "",
            "external_ipv6_prefix": "",
            "fingerprint": null,
            "gateway_address": "10.10.0.1",
            "id": "projects/hashicorp-393022/regions/us-east1/subnetworks/hashicorp-393022-subnet",
            "internal_ipv6_prefix": "",
            "ip_cidr_range": "10.10.0.0/24",
            "ipv6_access_type": "",
            "ipv6_cidr_range": "",
            "log_config": [],
            "name": "hashicorp-393022-subnet",
            "network": "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/global/networks/hashicorp-393022-vpc",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "hashicorp-393022",
            "purpose": "PRIVATE",
            "region": "us-east1",
            "role": "",
            "secondary_ip_range": [
              {
                "ip_cidr_range": "10.68.112.0/20",
                "range_name": "gke-hashicorp-393022-gke-services-b13e6b37"
              },
              {
                "ip_cidr_range": "10.204.0.0/14",
                "range_name": "gke-hashicorp-393022-gke-pods-b13e6b37"
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/hashicorp-393022/regions/us-east1/subnetworks/hashicorp-393022-subnet",
            "stack_type": "IPV4_ONLY",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.gcp_vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.istio",
      "mode": "managed",
      "type": "helm_release",
      "name": "istiobase",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "base",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istiobase",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.21.0",
                "chart": "base",
                "name": "istiobase",
                "namespace": "istio-system",
                "revision": 1,
                "values": "{}",
                "version": "1.21.0"
              }
            ],
            "name": "istiobase",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.21.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.istio",
      "mode": "managed",
      "type": "helm_release",
      "name": "istiod",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "istiod",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istiod",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.21.0",
                "chart": "istiod",
                "name": "istiod",
                "namespace": "istio-system",
                "revision": 1,
                "values": "{\"global\":{\"tracer\":{\"zipkin\":{\"address\":\"zipkin:9411\"}}},\"meshConfig\":{\"defaultConfig\":{\"tracing\":{\"sampling\":100},\"tracingServiceName\":\"zipkin\"}}}",
                "version": "1.21.0"
              }
            ],
            "name": "istiod",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "global:\n  tracer:\n    zipkin:\n      address: zipkin:9411\n\nmeshConfig:\n  defaultConfig:\n    tracing:\n      # tlsSettings: ISTIO_MUTUAL\n      sampling: 100.0\n    tracingServiceName: zipkin\n  # enableAutoMtls: true\n  # outboundTrafficPolicy: \n  #   mode: REGISTRY_ONLY"
            ],
            "verify": false,
            "version": "1.21.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio.helm_release.istiobase"
          ]
        }
      ]
    },
    {
      "module": "module.istio-ingressgateway",
      "mode": "data",
      "type": "kubernetes_service",
      "name": "lb",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "istio-ingress/istio-ingressgateway",
            "metadata": [
              {
                "annotations": {
                  "cloud.google.com/neg": "{\"ingress\":true}",
                  "meta.helm.sh/release-name": "istio-ingressgateway",
                  "meta.helm.sh/release-namespace": "istio-ingress"
                },
                "generation": 0,
                "labels": {
                  "app": "istio-ingressgateway",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "istio-ingressgateway",
                  "app.kubernetes.io/version": "1.21.0",
                  "helm.sh/chart": "gateway-1.21.0",
                  "istio": "ingressgateway"
                },
                "name": "istio-ingressgateway",
                "namespace": "istio-ingress",
                "resource_version": "129226",
                "uid": "91bfcaa0-338b-41ae-98bb-ad9c29b9a0c6"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.118.93",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "status-port",
                    "node_port": 30568,
                    "port": 15021,
                    "protocol": "TCP",
                    "target_port": "15021"
                  },
                  {
                    "app_protocol": "",
                    "name": "http2",
                    "node_port": 31451,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "80"
                  },
                  {
                    "app_protocol": "",
                    "name": "https",
                    "node_port": 30834,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "443"
                  },
                  {
                    "app_protocol": "",
                    "name": "kiali",
                    "node_port": 31761,
                    "port": 20001,
                    "protocol": "TCP",
                    "target_port": "20001"
                  },
                  {
                    "app_protocol": "",
                    "name": "api",
                    "node_port": 31190,
                    "port": 20002,
                    "protocol": "TCP",
                    "target_port": "20001"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "istio-ingressgateway",
                  "istio": "ingressgateway"
                },
                "session_affinity": "None",
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "35.196.0.9"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.istio-ingressgateway",
      "mode": "managed",
      "type": "helm_release",
      "name": "istio-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gateway",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-ingressgateway",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.21.0",
                "chart": "gateway",
                "name": "istio-ingressgateway",
                "namespace": "istio-ingress",
                "revision": 3,
                "values": "{\"gateways\":{\"istio-ingressgateway\":{\"serviceAnnotations\":{\"cloud.google.com/load-balancer-type\":\"External\",\"service.beta.kubernetes.io/external-traffic\":\"Only\"}}},\"service\":{\"ports\":[{\"name\":\"status-port\",\"port\":15021,\"protocol\":\"TCP\",\"targetPort\":15021},{\"name\":\"http2\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":443},{\"name\":\"kiali\",\"port\":20001,\"protocol\":\"TCP\",\"targetPort\":20001},{\"name\":\"api\",\"port\":20002,\"protocol\":\"TCP\",\"targetPort\":20001}],\"type\":\"LoadBalancer\"}}",
                "version": "1.21.0"
              }
            ],
            "name": "istio-ingressgateway",
            "namespace": "istio-ingress",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "gateways:\n  istio-ingressgateway:\n    serviceAnnotations:\n      cloud.google.com/load-balancer-type: \"External\"\n      service.beta.kubernetes.io/external-traffic: \"Only\"\nservice:    \n  type: LoadBalancer\n  ports:\n    - name: status-port\n      port: 15021\n      protocol: TCP\n      targetPort: 15021\n    - name: http2\n      port: 80\n      protocol: TCP\n      targetPort: 80\n    - name: https\n      port: 443\n      protocol: TCP\n      targetPort: 443\n    - name: kiali\n      port: 20001\n      protocol: TCP\n      targetPort: 20001\n    - name: api\n      port: 20002\n      protocol: TCP\n      targetPort: 20001"
            ],
            "verify": false,
            "version": "1.21.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.istio-ingressgateway",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "api_ingressgateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "Gateway",
                "metadata": {
                  "name": "api-ingressgateway",
                  "namespace": "k8s-microservices"
                },
                "spec": {
                  "selector": {
                    "istio": "ingressgateway"
                  },
                  "servers": [
                    {
                      "hosts": [
                        "*"
                      ],
                      "port": {
                        "name": "http",
                        "number": 80,
                        "protocol": "HTTP"
                      }
                    },
                    {
                      "hosts": [
                        "*"
                      ],
                      "port": {
                        "name": "api",
                        "number": 20002,
                        "protocol": "HTTP"
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "object",
                        {
                          "istio": "string"
                        }
                      ],
                      "servers": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number",
                                  "protocol": "string"
                                }
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number",
                                  "protocol": "string"
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "Gateway",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "api-ingressgateway",
                  "namespace": "k8s-microservices",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "selector": {
                    "istio": "ingressgateway"
                  },
                  "servers": [
                    {
                      "bind": null,
                      "defaultEndpoint": null,
                      "hosts": [
                        "*"
                      ],
                      "name": null,
                      "port": {
                        "name": "http",
                        "number": 80,
                        "protocol": "HTTP",
                        "targetPort": null
                      },
                      "tls": {
                        "caCertificates": null,
                        "cipherSuites": null,
                        "credentialName": null,
                        "httpsRedirect": null,
                        "maxProtocolVersion": null,
                        "minProtocolVersion": null,
                        "mode": null,
                        "privateKey": null,
                        "serverCertificate": null,
                        "subjectAltNames": null,
                        "verifyCertificateHash": null,
                        "verifyCertificateSpki": null
                      }
                    },
                    {
                      "bind": null,
                      "defaultEndpoint": null,
                      "hosts": [
                        "*"
                      ],
                      "name": null,
                      "port": {
                        "name": "api",
                        "number": 20002,
                        "protocol": "HTTP",
                        "targetPort": null
                      },
                      "tls": {
                        "caCertificates": null,
                        "cipherSuites": null,
                        "credentialName": null,
                        "httpsRedirect": null,
                        "maxProtocolVersion": null,
                        "minProtocolVersion": null,
                        "mode": null,
                        "privateKey": null,
                        "serverCertificate": null,
                        "subjectAltNames": null,
                        "verifyCertificateHash": null,
                        "verifyCertificateSpki": null
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "map",
                        "string"
                      ],
                      "servers": [
                        "list",
                        [
                          "object",
                          {
                            "bind": "string",
                            "defaultEndpoint": "string",
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "name": "string",
                            "port": [
                              "object",
                              {
                                "name": "string",
                                "number": "number",
                                "protocol": "string",
                                "targetPort": "number"
                              }
                            ],
                            "tls": [
                              "object",
                              {
                                "caCertificates": "string",
                                "cipherSuites": [
                                  "list",
                                  "string"
                                ],
                                "credentialName": "string",
                                "httpsRedirect": "bool",
                                "maxProtocolVersion": "string",
                                "minProtocolVersion": "string",
                                "mode": "string",
                                "privateKey": "string",
                                "serverCertificate": "string",
                                "subjectAltNames": [
                                  "list",
                                  "string"
                                ],
                                "verifyCertificateHash": [
                                  "list",
                                  "string"
                                ],
                                "verifyCertificateSpki": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio-ingressgateway.helm_release.istio-ingress",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.istio-ingressgateway",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "istio_ingressgateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "Gateway",
                "metadata": {
                  "name": "istio-ingressgateway",
                  "namespace": "istio-system"
                },
                "spec": {
                  "selector": {
                    "istio": "ingressgateway"
                  },
                  "servers": [
                    {
                      "hosts": [
                        "*"
                      ],
                      "port": {
                        "name": "http",
                        "number": 80,
                        "protocol": "HTTP"
                      }
                    },
                    {
                      "hosts": [
                        "*"
                      ],
                      "port": {
                        "name": "kiali",
                        "number": 20001,
                        "protocol": "HTTP"
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "object",
                        {
                          "istio": "string"
                        }
                      ],
                      "servers": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number",
                                  "protocol": "string"
                                }
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number",
                                  "protocol": "string"
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "Gateway",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "istio-ingressgateway",
                  "namespace": "istio-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "selector": {
                    "istio": "ingressgateway"
                  },
                  "servers": [
                    {
                      "bind": null,
                      "defaultEndpoint": null,
                      "hosts": [
                        "*"
                      ],
                      "name": null,
                      "port": {
                        "name": "http",
                        "number": 80,
                        "protocol": "HTTP",
                        "targetPort": null
                      },
                      "tls": {
                        "caCertificates": null,
                        "cipherSuites": null,
                        "credentialName": null,
                        "httpsRedirect": null,
                        "maxProtocolVersion": null,
                        "minProtocolVersion": null,
                        "mode": null,
                        "privateKey": null,
                        "serverCertificate": null,
                        "subjectAltNames": null,
                        "verifyCertificateHash": null,
                        "verifyCertificateSpki": null
                      }
                    },
                    {
                      "bind": null,
                      "defaultEndpoint": null,
                      "hosts": [
                        "*"
                      ],
                      "name": null,
                      "port": {
                        "name": "kiali",
                        "number": 20001,
                        "protocol": "HTTP",
                        "targetPort": null
                      },
                      "tls": {
                        "caCertificates": null,
                        "cipherSuites": null,
                        "credentialName": null,
                        "httpsRedirect": null,
                        "maxProtocolVersion": null,
                        "minProtocolVersion": null,
                        "mode": null,
                        "privateKey": null,
                        "serverCertificate": null,
                        "subjectAltNames": null,
                        "verifyCertificateHash": null,
                        "verifyCertificateSpki": null
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "map",
                        "string"
                      ],
                      "servers": [
                        "list",
                        [
                          "object",
                          {
                            "bind": "string",
                            "defaultEndpoint": "string",
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "name": "string",
                            "port": [
                              "object",
                              {
                                "name": "string",
                                "number": "number",
                                "protocol": "string",
                                "targetPort": "number"
                              }
                            ],
                            "tls": [
                              "object",
                              {
                                "caCertificates": "string",
                                "cipherSuites": [
                                  "list",
                                  "string"
                                ],
                                "credentialName": "string",
                                "httpsRedirect": "bool",
                                "maxProtocolVersion": "string",
                                "minProtocolVersion": "string",
                                "mode": "string",
                                "privateKey": "string",
                                "serverCertificate": "string",
                                "subjectAltNames": [
                                  "list",
                                  "string"
                                ],
                                "verifyCertificateHash": [
                                  "list",
                                  "string"
                                ],
                                "verifyCertificateSpki": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio-ingressgateway.helm_release.istio-ingress",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.kiali",
      "mode": "managed",
      "type": "helm_release",
      "name": "kiali",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kiali-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kiali-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.81.0",
                "chart": "kiali-server",
                "name": "kiali-server",
                "namespace": "istio-system",
                "revision": 2,
                "values": "{\"auth\":{\"strategy\":\"anonymous\"},\"external_services\":{\"istio\":{\"gateway_host\":\"istio-ingressgateway.istio-ingress.svc.cluster.local\",\"ingress_gateway\":{\"service_address\":\"35.196.0.9\",\"service_name\":\"istio-ingressgateway\",\"service_port\":80},\"root_namespace\":\"istio-system\"}}}",
                "version": "1.81.0"
              }
            ],
            "name": "kiali-server",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kiali.org/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "auth:\n  strategy: anonymous\n\nexternal_services:\n  istio:\n    root_namespace: istio-system\n    ingress_gateway:\n      service_name: istio-ingressgateway\n      service_port: 80\n      service_address: 35.196.0.9\n    gateway_host: istio-ingressgateway.istio-ingress.svc.cluster.local\n"
            ],
            "verify": false,
            "version": "1.81.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio-ingressgateway.data.kubernetes_service.lb",
            "module.istio-ingressgateway.helm_release.istio-ingress",
            "module.istio-ingressgateway.kubernetes_manifest.api_ingressgateway",
            "module.istio-ingressgateway.kubernetes_manifest.istio_ingressgateway",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.kiali",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "kiali_virtual_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "VirtualService",
                "metadata": {
                  "name": "kiali-vs",
                  "namespace": "istio-system"
                },
                "spec": {
                  "gateways": [
                    "istio-ingressgateway"
                  ],
                  "hosts": [
                    "*"
                  ],
                  "http": [
                    {
                      "match": [
                        {
                          "port": 20001
                        }
                      ],
                      "route": [
                        {
                          "destination": {
                            "host": "kiali.istio-system.svc.cluster.local",
                            "port": {
                              "number": 20001
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "gateways": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "hosts": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "http": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ],
                              "route": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "destination": [
                                        "object",
                                        {
                                          "host": "string",
                                          "port": [
                                            "object",
                                            {
                                              "number": "number"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.istio.io/v1alpha3",
                "kind": "VirtualService",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "kiali-vs",
                  "namespace": "istio-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "exportTo": null,
                  "gateways": [
                    "istio-ingressgateway"
                  ],
                  "hosts": [
                    "*"
                  ],
                  "http": [
                    {
                      "corsPolicy": {
                        "allowCredentials": null,
                        "allowHeaders": null,
                        "allowMethods": null,
                        "allowOrigin": null,
                        "allowOrigins": null,
                        "exposeHeaders": null,
                        "maxAge": null
                      },
                      "delegate": {
                        "name": null,
                        "namespace": null
                      },
                      "directResponse": {
                        "body": {
                          "bytes": null,
                          "string": null
                        },
                        "status": null
                      },
                      "fault": {
                        "abort": {
                          "grpcStatus": null,
                          "http2Error": null,
                          "httpStatus": null,
                          "percentage": {
                            "value": null
                          }
                        },
                        "delay": {
                          "exponentialDelay": null,
                          "fixedDelay": null,
                          "percent": null,
                          "percentage": {
                            "value": null
                          }
                        }
                      },
                      "headers": {
                        "request": {
                          "add": null,
                          "remove": null,
                          "set": null
                        },
                        "response": {
                          "add": null,
                          "remove": null,
                          "set": null
                        }
                      },
                      "match": [
                        {
                          "authority": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "gateways": null,
                          "headers": null,
                          "ignoreUriCase": null,
                          "method": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "name": null,
                          "port": 20001,
                          "queryParams": null,
                          "scheme": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "sourceLabels": null,
                          "sourceNamespace": null,
                          "statPrefix": null,
                          "uri": {
                            "exact": null,
                            "prefix": null,
                            "regex": null
                          },
                          "withoutHeaders": null
                        }
                      ],
                      "mirror": {
                        "host": null,
                        "port": {
                          "number": null
                        },
                        "subset": null
                      },
                      "mirrorPercent": null,
                      "mirrorPercentage": {
                        "value": null
                      },
                      "mirror_percent": null,
                      "mirrors": null,
                      "name": null,
                      "redirect": {
                        "authority": null,
                        "derivePort": null,
                        "port": null,
                        "redirectCode": null,
                        "scheme": null,
                        "uri": null
                      },
                      "retries": {
                        "attempts": null,
                        "perTryTimeout": null,
                        "retryOn": null,
                        "retryRemoteLocalities": null
                      },
                      "rewrite": {
                        "authority": null,
                        "uri": null,
                        "uriRegexRewrite": {
                          "match": null,
                          "rewrite": null
                        }
                      },
                      "route": [
                        {
                          "destination": {
                            "host": "kiali.istio-system.svc.cluster.local",
                            "port": {
                              "number": 20001
                            },
                            "subset": null
                          },
                          "headers": {
                            "request": {
                              "add": null,
                              "remove": null,
                              "set": null
                            },
                            "response": {
                              "add": null,
                              "remove": null,
                              "set": null
                            }
                          },
                          "weight": null
                        }
                      ],
                      "timeout": null
                    }
                  ],
                  "tcp": null,
                  "tls": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "exportTo": [
                        "list",
                        "string"
                      ],
                      "gateways": [
                        "list",
                        "string"
                      ],
                      "hosts": [
                        "list",
                        "string"
                      ],
                      "http": [
                        "list",
                        [
                          "object",
                          {
                            "corsPolicy": [
                              "object",
                              {
                                "allowCredentials": "bool",
                                "allowHeaders": [
                                  "list",
                                  "string"
                                ],
                                "allowMethods": [
                                  "list",
                                  "string"
                                ],
                                "allowOrigin": [
                                  "list",
                                  "string"
                                ],
                                "allowOrigins": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ]
                                ],
                                "exposeHeaders": [
                                  "list",
                                  "string"
                                ],
                                "maxAge": "string"
                              }
                            ],
                            "delegate": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ],
                            "directResponse": [
                              "object",
                              {
                                "body": [
                                  "object",
                                  {
                                    "bytes": "string",
                                    "string": "string"
                                  }
                                ],
                                "status": "number"
                              }
                            ],
                            "fault": [
                              "object",
                              {
                                "abort": [
                                  "object",
                                  {
                                    "grpcStatus": "string",
                                    "http2Error": "string",
                                    "httpStatus": "number",
                                    "percentage": [
                                      "object",
                                      {
                                        "value": "number"
                                      }
                                    ]
                                  }
                                ],
                                "delay": [
                                  "object",
                                  {
                                    "exponentialDelay": "string",
                                    "fixedDelay": "string",
                                    "percent": "number",
                                    "percentage": [
                                      "object",
                                      {
                                        "value": "number"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "headers": [
                              "object",
                              {
                                "request": [
                                  "object",
                                  {
                                    "add": [
                                      "map",
                                      "string"
                                    ],
                                    "remove": [
                                      "list",
                                      "string"
                                    ],
                                    "set": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "response": [
                                  "object",
                                  {
                                    "add": [
                                      "map",
                                      "string"
                                    ],
                                    "remove": [
                                      "list",
                                      "string"
                                    ],
                                    "set": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "authority": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "headers": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ],
                                  "ignoreUriCase": "bool",
                                  "method": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "name": "string",
                                  "port": "number",
                                  "queryParams": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ],
                                  "scheme": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string",
                                  "statPrefix": "string",
                                  "uri": [
                                    "object",
                                    {
                                      "exact": "string",
                                      "prefix": "string",
                                      "regex": "string"
                                    }
                                  ],
                                  "withoutHeaders": [
                                    "map",
                                    [
                                      "object",
                                      {
                                        "exact": "string",
                                        "prefix": "string",
                                        "regex": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ],
                            "mirror": [
                              "object",
                              {
                                "host": "string",
                                "port": [
                                  "object",
                                  {
                                    "number": "number"
                                  }
                                ],
                                "subset": "string"
                              }
                            ],
                            "mirrorPercent": "number",
                            "mirrorPercentage": [
                              "object",
                              {
                                "value": "number"
                              }
                            ],
                            "mirror_percent": "number",
                            "mirrors": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "percentage": [
                                    "object",
                                    {
                                      "value": "number"
                                    }
                                  ]
                                }
                              ]
                            ],
                            "name": "string",
                            "redirect": [
                              "object",
                              {
                                "authority": "string",
                                "derivePort": "string",
                                "port": "number",
                                "redirectCode": "number",
                                "scheme": "string",
                                "uri": "string"
                              }
                            ],
                            "retries": [
                              "object",
                              {
                                "attempts": "number",
                                "perTryTimeout": "string",
                                "retryOn": "string",
                                "retryRemoteLocalities": "bool"
                              }
                            ],
                            "rewrite": [
                              "object",
                              {
                                "authority": "string",
                                "uri": "string",
                                "uriRegexRewrite": [
                                  "object",
                                  {
                                    "match": "string",
                                    "rewrite": "string"
                                  }
                                ]
                              }
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "headers": [
                                    "object",
                                    {
                                      "request": [
                                        "object",
                                        {
                                          "add": [
                                            "map",
                                            "string"
                                          ],
                                          "remove": [
                                            "list",
                                            "string"
                                          ],
                                          "set": [
                                            "map",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "response": [
                                        "object",
                                        {
                                          "add": [
                                            "map",
                                            "string"
                                          ],
                                          "remove": [
                                            "list",
                                            "string"
                                          ],
                                          "set": [
                                            "map",
                                            "string"
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ],
                            "timeout": "string"
                          }
                        ]
                      ],
                      "tcp": [
                        "list",
                        [
                          "object",
                          {
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "destinationSubnets": [
                                    "list",
                                    "string"
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "port": "number",
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string",
                                  "sourceSubnet": "string"
                                }
                              ]
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "match": [
                              "list",
                              [
                                "object",
                                {
                                  "destinationSubnets": [
                                    "list",
                                    "string"
                                  ],
                                  "gateways": [
                                    "list",
                                    "string"
                                  ],
                                  "port": "number",
                                  "sniHosts": [
                                    "list",
                                    "string"
                                  ],
                                  "sourceLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "sourceNamespace": "string"
                                }
                              ]
                            ],
                            "route": [
                              "list",
                              [
                                "object",
                                {
                                  "destination": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": [
                                        "object",
                                        {
                                          "number": "number"
                                        }
                                      ],
                                      "subset": "string"
                                    }
                                  ],
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.ingress",
            "kubernetes_namespace.istiosystem",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.istio-ingressgateway.data.kubernetes_service.lb",
            "module.istio-ingressgateway.helm_release.istio-ingress",
            "module.istio-ingressgateway.kubernetes_manifest.api_ingressgateway",
            "module.istio-ingressgateway.kubernetes_manifest.istio_ingressgateway",
            "module.istio.helm_release.istiobase",
            "module.istio.helm_release.istiod"
          ]
        }
      ]
    },
    {
      "module": "module.orders",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "order-srv-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/order-srv-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 2,
                "labels": {
                  "app": "order-service"
                },
                "name": "order-srv-deployment",
                "namespace": "k8s-microservices",
                "resource_version": "185865",
                "uid": "53cb943c-a123-438b-baf4-17e2448a3190"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "order-service"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "order-service"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "PORT",
                                "value": ":50053",
                                "value_from": []
                              },
                              {
                                "name": "DB_URL",
                                "value": "postgres://erwin:password@order-database.k8s-microservices:5236/order",
                                "value_from": []
                              },
                              {
                                "name": "PRODUCT_SVC_URL",
                                "value": "product-service.k8s-microservices:82",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "erwinsalas42/go-grpc-order-svc:v1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "go-grpc-order-svc",
                            "port": [
                              {
                                "container_port": 50053,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.orders.kubernetes_service.order-db-service",
            "module.orders.kubernetes_stateful_set_v1.order-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.orders",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "order-db-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/order-database",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "order-database"
                },
                "name": "order-database",
                "namespace": "k8s-microservices",
                "resource_version": "26900",
                "uid": "52c48dff-60f7-42b5-ad8f-3e9e7eb3ff2e"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.115.94",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 0,
                    "port": 5236,
                    "protocol": "TCP",
                    "target_port": "5236"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "order-database"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.orders.kubernetes_stateful_set_v1.order-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.orders",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "order-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/order-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "order-service",
                "namespace": "k8s-microservices",
                "resource_version": "26901",
                "uid": "dd2eb45c-bcd3-4b75-9bcd-11579909d51a"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.113.4",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "grpc",
                    "node_port": 0,
                    "port": 81,
                    "protocol": "TCP",
                    "target_port": "50053"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "order-service"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.orders.kubernetes_deployment.order-srv-deployment",
            "module.orders.kubernetes_service.order-db-service",
            "module.orders.kubernetes_stateful_set_v1.order-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.orders",
      "mode": "managed",
      "type": "kubernetes_stateful_set_v1",
      "name": "order-db-statefulset",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/order-db-statefulset",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 2,
                "labels": {
                  "app": "order-database"
                },
                "name": "order-db-statefulset",
                "namespace": "k8s-microservices",
                "resource_version": "185640",
                "uid": "22fdb178-7604-4100-bbaa-a995b3030d24"
              }
            ],
            "spec": [
              {
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "order-database"
                    }
                  }
                ],
                "service_name": "order-db-statefulset",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "order-database"
                        },
                        "name": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "-p",
                              "5236"
                            ],
                            "command": [],
                            "env": [
                              {
                                "name": "POSTGRES_USER",
                                "value": "erwin",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_PASSWORD",
                                "value": "password",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_DB",
                                "value": "order",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "postgres:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "order-database",
                            "port": [
                              {
                                "container_port": 5236,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": []
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.products",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "product-srv-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/product-srv-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 2,
                "labels": {
                  "app": "product-service"
                },
                "name": "product-srv-deployment",
                "namespace": "k8s-microservices",
                "resource_version": "185740",
                "uid": "72f7e9da-da35-430a-b685-92be9f0600c1"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "product-service"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "product-service"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "PORT",
                                "value": ":50054",
                                "value_from": []
                              },
                              {
                                "name": "DB_URL",
                                "value": "postgres://erwin:password@product-database.k8s-microservices:5237/product",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "erwinsalas42/go-grpc-product-svc:v1.1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "product-service",
                            "port": [
                              {
                                "container_port": 50054,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.products.kubernetes_service.product-db-service",
            "module.products.kubernetes_stateful_set_v1.product-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.products",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "product-db-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/product-database",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "product-database"
                },
                "name": "product-database",
                "namespace": "k8s-microservices",
                "resource_version": "26894",
                "uid": "e8608570-5661-4b6b-a962-5c96d8f1c0af"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.117.30",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 0,
                    "port": 5237,
                    "protocol": "TCP",
                    "target_port": "5237"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "product-database"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.products.kubernetes_stateful_set_v1.product-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.products",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "product-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/product-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "product-service",
                "namespace": "k8s-microservices",
                "resource_version": "26897",
                "uid": "ab006549-4739-40c3-b289-6f2143cd2c79"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.68.126.171",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "grpc",
                    "node_port": 0,
                    "port": 82,
                    "protocol": "TCP",
                    "target_port": "50054"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "product-service"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet",
            "module.products.kubernetes_deployment.product-srv-deployment",
            "module.products.kubernetes_service.product-db-service",
            "module.products.kubernetes_stateful_set_v1.product-db-statefulset"
          ]
        }
      ]
    },
    {
      "module": "module.products",
      "mode": "managed",
      "type": "kubernetes_stateful_set_v1",
      "name": "product-db-statefulset",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "k8s-microservices/product-db-statefulset",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 2,
                "labels": {
                  "app": "product-database"
                },
                "name": "product-db-statefulset",
                "namespace": "k8s-microservices",
                "resource_version": "185634",
                "uid": "fb8214fb-4794-4c0a-a374-87db9fe97f17"
              }
            ],
            "spec": [
              {
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "product-database"
                    }
                  }
                ],
                "service_name": "product-db-statefulset",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "product-database"
                        },
                        "name": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "-p",
                              "5237"
                            ],
                            "command": [],
                            "env": [
                              {
                                "name": "POSTGRES_USER",
                                "value": "erwin",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_PASSWORD",
                                "value": "password",
                                "value_from": []
                              },
                              {
                                "name": "POSTGRES_DB",
                                "value": "product",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "postgres:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "product-database",
                            "port": [
                              {
                                "container_port": 5237,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "10m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": []
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.google_client_config.current",
            "kubernetes_namespace.main",
            "module.gcp_gke.data.google_container_engine_versions.gke_version",
            "module.gcp_gke.google_container_cluster.primary",
            "module.gcp_gke.google_container_node_pool.primary_nodes",
            "module.gcp_vpc.google_compute_firewall.allow-http",
            "module.gcp_vpc.google_compute_network.vpc",
            "module.gcp_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
